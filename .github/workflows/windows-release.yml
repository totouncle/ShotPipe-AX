name: 🎬 Windows Release Build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.3.0)'
        required: true
        default: 'v1.3.0'

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install NSIS
      run: |
        choco install nsis -y
        
    - name: 📷 Setup ExifTool
      run: |
        Invoke-WebRequest -Uri "https://exiftool.org/exiftool-12.70.exe" -OutFile "vendor/exiftool.exe"
        
    - name: 🔧 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: 🛡️ Configure Windows Defender (if needed)
      run: |
        # Windows Defender 예외 설정 (GitHub Actions 환경)
        Add-MpPreference -ExclusionPath "${{ github.workspace }}" -ErrorAction SilentlyContinue
        Add-MpPreference -ExclusionProcess "python.exe" -ErrorAction SilentlyContinue
        Add-MpPreference -ExclusionProcess "pyinstaller.exe" -ErrorAction SilentlyContinue
      shell: powershell
      continue-on-error: true
      
    - name: 🔨 Build Standalone Executable
      run: |
        echo "Building ShotPipe standalone executable..."
        pyinstaller --onefile --windowed --name=ShotPipe main.py
        
    - name: 📋 Verify Build
      run: |
        if (Test-Path "dist/ShotPipe.exe") {
          $size = (Get-Item "dist/ShotPipe.exe").Length / 1MB
          Write-Host "✅ Build successful! Size: $([math]::Round($size, 2)) MB"
        } else {
          Write-Host "❌ Build failed!"
          exit 1
        }
      shell: powershell
      
    - name: 📦 Create NSIS Installer
      run: |
        echo "Creating NSIS installer..."
        makensis ShotPipe_Installer.nsi
        
    - name: 🗜️ Create Portable Package
      run: |
        # 포터블 패키지 생성
        New-Item -ItemType Directory -Force -Path "ShotPipe_Portable"
        Copy-Item "dist/ShotPipe.exe" -Destination "ShotPipe_Portable/"
        Copy-Item "README.md" -Destination "ShotPipe_Portable/"
        Copy-Item "SUPER_EASY_WINDOWS_GUIDE.md" -Destination "ShotPipe_Portable/"
        Copy-Item "LICENSE.txt" -Destination "ShotPipe_Portable/" -ErrorAction SilentlyContinue
        
        # 실행 배치 파일 생성
        @"
        @echo off
        title ShotPipe - AI Generated File to Shotgrid
        echo 🎬 ShotPipe 시작 중...
        ShotPipe.exe
        "@ | Out-File -FilePath "ShotPipe_Portable/ShotPipe_Start.bat" -Encoding ASCII
        
        # ZIP 압축
        Compress-Archive -Path "ShotPipe_Portable" -DestinationPath "ShotPipe_Portable.zip" -Force
      shell: powershell
      
    - name: 📊 Generate Release Notes
      run: |
        $version = "${{ github.ref_name }}"
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $version = "${{ github.event.inputs.version }}"
        }
        
        $releaseNotes = @"
        # 🎬 ShotPipe $version - Windows Release
        
        ## 📦 다운로드 옵션
        
        ### 🎯 초보자용 (권장)
        - **ShotPipe_Setup.exe** - 원클릭 인스톨러
          - 바탕화면 바로가기 자동 생성
          - 시작메뉴 등록
          - 완전 자동 설치
        
        ### 🔧 고급 사용자용
        - **ShotPipe_Portable.zip** - 포터블 버전
          - 설치 없이 바로 실행
          - USB 등에 복사 가능
          - ShotPipe_Start.bat으로 실행
        
        ## 🚀 설치 방법
        
        ### 1. 간단 설치 (초보자)
        ```
        1. ShotPipe_Setup.exe 다운로드
        2. 더블클릭하여 실행
        3. "Windows에서 PC를 보호했습니다" 메시지 시:
           → "추가 정보" 클릭 → "실행" 클릭
        4. 설치 완료 후 바탕화면 아이콘 클릭
        ```
        
        ### 2. 포터블 사용 (고급)
        ```
        1. ShotPipe_Portable.zip 다운로드
        2. 원하는 폴더에 압축 해제
        3. ShotPipe_Start.bat 실행
        ```
        
        ## 🔧 필수 요구사항
        
        - **Windows 10/11** (64bit)
        - **2GB 이상** 저장공간
        - **관리자 권한** (설치 시)
        
        ## 📋 주요 기능
        
        - ✅ AI 생성 파일 자동 처리
        - ✅ Shotgrid 자동 업로드
        - ✅ 메타데이터 자동 추출
        - ✅ 배치 처리 지원
        - ✅ 사용자 친화적 GUI
        
        ## 🆘 문제 해결
        
        ### Windows Defender 차단
        ```
        "추가 정보" → "실행" 클릭
        또는 windows_defender_fix.bat 실행 (관리자 권한)
        ```
        
        ### ExifTool 설치 (메타데이터 처리)
        ```
        install_exiftool.bat 실행 (관리자 권한)
        ```
        
        ## 📚 문서
        
        - [초보자 가이드](SUPER_EASY_WINDOWS_GUIDE.md)
        - [상세 사용자 가이드](WINDOWS_USER_GUIDE.md)
        - [빌드 가이드](WINDOWS_BUILD_INSTRUCTIONS.md)
        
        ## 🎬 즐거운 작업 되세요!
        
        AI 생성 콘텐츠를 Shotgrid로 효율적으로 업로드하세요!
        "@
        
        $releaseNotes | Out-File -FilePath "RELEASE_NOTES.md" -Encoding UTF8
      shell: powershell
      
    - name: 🏷️ Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ShotPipe_Setup.exe
          ShotPipe_Portable.zip
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: false
        tag_name: ${{ github.ref_name || github.event.inputs.version }}
        name: 🎬 ShotPipe ${{ github.ref_name || github.event.inputs.version }} - Windows Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 📊 Build Summary
      run: |
        echo "## 🎉 Build Completed Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 Generated Files:" >> $GITHUB_STEP_SUMMARY
        if (Test-Path "ShotPipe_Setup.exe") {
          $installerSize = [math]::Round((Get-Item "ShotPipe_Setup.exe").Length / 1MB, 2)
          echo "- ✅ **ShotPipe_Setup.exe** ($installerSize MB)" >> $GITHUB_STEP_SUMMARY
        }
        if (Test-Path "ShotPipe_Portable.zip") {
          $portableSize = [math]::Round((Get-Item "ShotPipe_Portable.zip").Length / 1MB, 2)
          echo "- ✅ **ShotPipe_Portable.zip** ($portableSize MB)" >> $GITHUB_STEP_SUMMARY
        }
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Download the release files" >> $GITHUB_STEP_SUMMARY
        echo "2. Test installation on clean Windows machine" >> $GITHUB_STEP_SUMMARY
        echo "3. Distribute to users" >> $GITHUB_STEP_SUMMARY
        echo "4. Update documentation if needed" >> $GITHUB_STEP_SUMMARY
      shell: powershell 