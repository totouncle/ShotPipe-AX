name: 🚀 Build Windows Distribution

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # 수동 실행 가능

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: 💾 Cache Dependencies
      uses: actions/cache@v4
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: 🏗️ Build Executable with PyInstaller
      run: |
        pyinstaller --onefile --windowed --name ShotPipe main.py --add-data "shotpipe;shotpipe" --add-data "vendor;vendor"
        
    - name: 📋 Verify Build
      run: |
        dir dist
        if (Test-Path "dist/ShotPipe.exe") {
          Write-Host "✅ ShotPipe.exe generated successfully"
          $size = (Get-Item "dist/ShotPipe.exe").Length / 1MB
          Write-Host "📏 File size: $([math]::Round($size, 2)) MB"
        } else {
          Write-Host "❌ ShotPipe.exe not found"
          exit 1
        }
        
    - name: 🔧 Install NSIS
      run: |
        choco install nsis -y
        
    - name: 🎯 Build NSIS Installer
      run: |
        # NSIS를 PATH에 추가
        $env:PATH += ";C:\Program Files (x86)\NSIS"
        
        # NSIS 스크립트 실행
        makensis ShotPipe_Installer.nsi
        
        # 결과 확인
        if (Test-Path "ShotPipe_v1.3.0_Setup.exe") {
          Write-Host "✅ NSIS Installer generated successfully"
          $size = (Get-Item "ShotPipe_v1.3.0_Setup.exe").Length / 1MB
          Write-Host "📏 Installer size: $([math]::Round($size, 2)) MB"
        } else {
          Write-Host "❌ NSIS Installer generation failed"
          exit 1
        }
        
    - name: 📤 Upload Standalone Executable
      uses: actions/upload-artifact@v4
      with:
        name: ShotPipe-Windows-Standalone
        path: |
          dist/ShotPipe.exe
          README.md
          LICENSE.txt
          WINDOWS_USER_GUIDE.md
        retention-days: 30
        
    - name: 📤 Upload NSIS Installer
      uses: actions/upload-artifact@v4
      with:
        name: ShotPipe-Windows-Installer
        path: |
          ShotPipe_v1.3.0_Setup.exe
          WINDOWS_USER_GUIDE.md
          README.md
        retention-days: 30
        
    - name: 🎉 Build Summary
      run: |
        Write-Host ""
        Write-Host "🎊 Build Completed Successfully!"
        Write-Host "=================================="
        Write-Host ""
        Write-Host "📦 Generated Files:"
        if (Test-Path "dist/ShotPipe.exe") {
          $size = (Get-Item "dist/ShotPipe.exe").Length / 1MB
          Write-Host "  ✅ ShotPipe.exe ($([math]::Round($size, 2)) MB)"
        }
        if (Test-Path "ShotPipe_v1.3.0_Setup.exe") {
          $size = (Get-Item "ShotPipe_v1.3.0_Setup.exe").Length / 1MB
          Write-Host "  ✅ ShotPipe_v1.3.0_Setup.exe ($([math]::Round($size, 2)) MB)"
        }
        Write-Host ""
        Write-Host "📥 Download artifacts from the Actions tab"
        Write-Host "🚀 Ready for Windows deployment!"