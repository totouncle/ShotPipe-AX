name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libexif-dev \
          exiftool \
          xvfb \
          libxkbcommon-x11-0 \
          libxcb-icccm4 \
          libxcb-image0 \
          libxcb-keysyms1 \
          libxcb-randr0 \
          libxcb-render-util0 \
          libxcb-xinerama0 \
          libxcb-xfixes0

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install exiftool

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # ExifTool은 vendor 디렉토리에 포함되어 있음
        echo "ExifTool included in vendor directory"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-qt pytest-cov

    - name: Set up test environment
      run: |
        cp .env.example .env || echo "No .env.example found"

    - name: Run tests (Ubuntu/macOS)
      if: matrix.os != 'windows-latest'
      env:
        QT_QPA_PLATFORM: offscreen
        DISPLAY: ':99.0'
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          xvfb-run -a pytest -v --tb=short
        else
          pytest -v --tb=short
        fi

    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest'
      env:
        QT_QPA_PLATFORM: offscreen
      run: |
        pytest -v --tb=short

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy

    - name: Lint with flake8
      run: |
        # E501: line too long (handled by black)
        # W503: line break before binary operator (conflicts with W504)
        flake8 shotpipe/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 shotpipe/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics --ignore=E501,W503

    - name: Check formatting with black
      run: |
        black --check --diff shotpipe/

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff shotpipe/

    - name: Type check with mypy
      run: |
        mypy shotpipe/ --ignore-missing-imports --no-strict-optional
